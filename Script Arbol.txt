# Ruta de origen y destino
$directorioOrigen = "C:\Proyectos\gaschsoft.github.io"
$directorioDestino = "C:\Proyectos\gaschsoft.github.io"

# Nombre del proyecto
$nombreProyecto = "gaschsoft.github.io"

# Buscar archivos existentes en el destino
$pattern = "* Arbol - $nombreProyecto*.txt"
$archivosProyecto = Get-ChildItem $directorioDestino -Filter $pattern

if ($archivosProyecto) {
    # Si existe algÃºn archivo para este proyecto, buscar el archivo base
    $archivoBase = $archivosProyecto | Where-Object { $_.Name -match "^\d+\. Arbol - $nombreProyecto\.txt$" } | Select-Object -First 1
    if ($archivoBase) {
        if ($archivoBase.Name -match "^(\d+)\.") {
            $numeroProyecto = $Matches[1]
        }
    } else {
        if ($archivosProyecto[0].Name -match "^(\d+)\.") {
            $numeroProyecto = $Matches[1]
        }
    }
} else {
    # Si no hay archivos, calcular nuevo nÃºmero basado en todos los archivos
    $todosArchivos = Get-ChildItem $directorioDestino -Filter "*.txt"
    $maxNumero = 0
    foreach ($archivo in $todosArchivos) {
        if ($archivo.Name -match "^(\d+)\.") {
            $num = [int]$Matches[1]
            if ($num -gt $maxNumero) {
                $maxNumero = $num
            }
        }
    }
    $numeroProyecto = $maxNumero + 1
}

# Construir el nombre base del archivo
$baseNombreArchivo = "$numeroProyecto. Arbol - $nombreProyecto"
$rutaBase = Join-Path $directorioDestino "$baseNombreArchivo.txt"

# Si el archivo base no existe, usarlo; si existe, buscar V1, V2, V3...
if (-Not (Test-Path $rutaBase)) {
    $rutaSalida = $rutaBase
} else {
    $version = 0
    $rutaSalida = $rutaBase
    while (Test-Path $rutaSalida) {
        $version++
        $rutaSalida = Join-Path $directorioDestino ("$baseNombreArchivo V$version.txt")
    }
}

# Ejecutar el comando tree y guardar el resultado
tree "$directorioOrigen" /F /A > "$rutaSalida"
